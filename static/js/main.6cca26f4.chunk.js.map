{"version":3,"sources":["finger.png","App.js","index.js"],"names":["module","exports","__webpack_require__","p","savedLength","Number","localStorage","getItem","savedNumbers","JSON","parse","createArray","length","Array","fill","map","_","i","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","checkArray","shuffle","array","shuffleNumbers","filter","item","flatten","chunk","a","shift","handleOnDown","e","currentTarget","classList","add","copyArray","state","resetLength","keys","clearInterval","timer","isGood","every","newLength","isEmpty","setItem","stringify","setState","startTimer","handleOnUp","remove","renderItem","react_default","createElement","key","className","cx","active","_this2","time","setInterval","src","LIGHT_FINGERS_SRC","alt","onMouseDown","onMouseUp","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6cca26f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finger.af9530c9.png\";","import React from 'react';\nimport cx from 'classnames';\nimport shuffle from 'lodash/shuffle';\nimport chunk from 'lodash/chunk';\nimport flatten from 'lodash/flatten';\nimport isEmpty from 'lodash/isEmpty';\n\nimport LIGHT_FINGERS_SRC from './finger.png';\n\nimport './App.css';\n\nconst savedLength = Number(localStorage.getItem('savedLength')) || 1;\nconst savedNumbers = localStorage.getItem('savedNumbers') ? JSON.parse(localStorage.getItem('savedNumbers')) : {};\n\nconst createArray = (length) => {\n    return Array(length).fill(length).map((_, i) => i);\n};\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            array: this.shuffle(savedLength, savedNumbers),\n            length: savedLength,\n            savedNumbers: savedNumbers\n        };\n    }\n\n    timer;\n\n    componentDidMount() {\n        this.startTimer(this.state.length)\n    }\n\n    startTimer(length) {\n        const time = 800 - (length * 15);\n\n        this.timer = setInterval(() => {\n            this.setState({\n                array: this.shuffle(this.state.length, this.state.savedNumbers)\n            })\n        }, time < 350 ? 350 : time);\n    }\n\n    handleToggle = () => {\n        this.checkArray();\n    }\n\n    shuffle = (length, savedNumbers) => {\n        const array = createArray(length);\n        let shuffleNumbers = array.filter((item) => {\n            return !savedNumbers[item];\n        });\n\n        shuffleNumbers = flatten(chunk(shuffleNumbers, 6).map(a => shuffle(a)));\n\n        const data = array.map(item => savedNumbers[item] ? item : shuffleNumbers.shift());\n\n        return data;\n    }\n\n    handleOnDown = (e) => {\n        e.currentTarget.classList.add('press-finger')\n\n        const copyArray = createArray(this.state.length);\n        let savedNumbers = {};\n        const resetLength = Object.keys(this.state.savedNumbers).length;\n\n        clearInterval(this.timer);\n\n        const isGood = this.state.array.every((item, i) => {\n            const isGood = item === copyArray[i];\n\n            if (isGood) {\n                savedNumbers[item] = true;\n\n                return isGood\n            }\n\n            if (resetLength === i) {\n                savedNumbers = {};\n            }\n\n            return isGood;\n        });\n\n        let newLength = this.state.length;\n\n        if (!isGood) {\n            if (isEmpty(savedNumbers) && isEmpty(this.state.savedNumbers)) {\n                newLength--\n            }\n        } else {\n            savedNumbers = {};\n\n            newLength++;\n        }\n\n        localStorage.setItem('savedLength', newLength);\n        localStorage.setItem('savedNumbers', JSON.stringify(savedNumbers));\n\n        this.setState({\n            array: this.shuffle(newLength, savedNumbers),\n            length: newLength,\n            savedNumbers\n        });\n\n        this.startTimer(newLength)\n    }\n\n    handleOnUp = (e) => e.currentTarget.classList.remove('press-finger');\n\n    renderItem = (i) => <div key={i} className={cx('item', { active: this.state.savedNumbers[i] })}>{i}</div>;\n\n    render() {\n        const { array } = this.state;\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"title\">\n                    Easy sort array\n                </div>\n                <div className=\"sub-title\">\n                    level:<div className=\"points\"> {this.state.length - 1}</div>\n                </div>\n\n                <div className=\"array\">\n                    {array.map(this.renderItem)}\n                </div>\n\n                <img\n                    src={LIGHT_FINGERS_SRC}\n                    alt=\"finger\"\n                    onMouseDown={this.handleOnDown}\n                    onMouseUp={this.handleOnUp}\n                    className=\"finger\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}