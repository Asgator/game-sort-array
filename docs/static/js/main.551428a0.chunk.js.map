{"version":3,"sources":["App.js","index.js"],"names":["savedLength","Number","localStorage","getItem","savedNumbers","JSON","parse","createArray","length","Array","fill","map","_","i","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","checkArray","shuffle","array","shuffleNumbers","filter","item","flatten","chunk","a","shift","copyArray","state","resetLength","keys","every","isGood","setState","isRun","setItem","stringify","newLength","clearInterval","timer","startTimer","renderItem","react_default","createElement","key","className","cx","active","_this2","time","setInterval","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.551428a0.chunk.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport shuffle from 'lodash/shuffle';\nimport chunk from 'lodash/chunk';\nimport flatten from 'lodash/flatten';\n\nimport './App.css';\n\nconst savedLength = Number(localStorage.getItem('savedLength')) || 2;\nconst savedNumbers = localStorage.getItem('savedNumbers') ? JSON.parse(localStorage.getItem('savedNumbers')) : {};\n\nconst createArray = (length) => {\n    return Array(length).fill(length).map((_, i) => i);\n};\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            array: this.shuffle(savedLength, savedNumbers),\n            length: savedLength,\n            savedNumbers: savedNumbers\n        };\n    }\n\n    timer;\n\n    componentDidMount() {\n        this.startTimer(this.state.length)\n    }\n\n    startTimer(length) {\n        const time = 800 - (length * 10);\n\n        this.timer = setInterval(() => {\n            this.setState({\n                array: this.shuffle(this.state.length, this.state.savedNumbers)\n            })\n        }, time < 350 ? 350 : time);\n    }\n\n    handleToggle = () => {\n        this.checkArray();\n    }\n\n    shuffle = (length, savedNumbers) => {\n        const array = createArray(length);\n        let shuffleNumbers = array.filter((item) => {\n            return !savedNumbers[item];\n        });\n\n        shuffleNumbers = flatten(chunk(shuffleNumbers, 6).map(a => shuffle(a)));\n\n        const data = array.map(item => savedNumbers[item] ? item : shuffleNumbers.shift());\n\n        return data;\n    }\n\n    checkArray = () => {\n        const copyArray = createArray(this.state.length);\n        let savedNumbers = {};\n        const resetLength = Object.keys(this.state.savedNumbers).length;\n\n        const isGood = this.state.array.every((item, i) => {\n            const isGood = item === copyArray[i];\n\n            if (isGood) {\n                savedNumbers[item] = true;\n\n                return isGood\n            }\n\n            if (resetLength === i) {\n                savedNumbers = {};\n            }\n\n            return isGood;\n        });\n\n        if (!isGood) {\n            this.setState({\n                isRun: false,\n                savedNumbers\n            });\n\n            localStorage.setItem('savedNumbers', JSON.stringify(savedNumbers));\n\n            return;\n        }\n\n        const newLength = this.state.length + 1;\n\n        localStorage.setItem('savedLength', newLength);\n        localStorage.setItem('savedNumbers', JSON.stringify({}));\n\n        clearInterval(this.timer);\n\n        this.setState({\n            array: this.shuffle(newLength, {}),\n            length: newLength,\n            savedNumbers: {}\n        });\n\n        this.startTimer(newLength)\n    }\n\n    renderItem = (i) => <div key={i} className={cx('item', { active: this.state.savedNumbers[i] })}>{i}</div>;\n\n    render() {\n        const { array } = this.state;\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"title\">\n                    Easy sort array\n                </div>\n                <div className=\"sub-title\">\n                    level:<div className=\"points\"> {this.state.length - 2}</div>\n                </div>\n\n                <div className=\"array\">\n                    {array.map(this.renderItem)}\n                </div>\n\n                <div className=\"button\" onClick={this.handleToggle}>\n                    Check\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}